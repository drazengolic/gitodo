{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to gitodo docs To see what is gitodo and what can it do, check here . You can also read about the motivation behind it's development in my blog post: Committing upfront . Installation Currently it's only possible to install the application via source. Prerequisites: Go 1.23.4 or newer GCC MacOS: XCode, or type xcode-select --install in Terminal if you don't want the full app Linux: install build-essential package or equivalent Windows: install MSYS2 package in your PATH, or if you're using Scoop: scoop install gcc After the prerequisites are installed, execute the following command: go install github.com/drazengolic/gitodo@latest The application is tested on macOS and Ubuntu Linux. It works on Windows as well, but it's kind of sluggish, and you must use the Windows Terminal.","title":"Welcome to gitodo docs"},{"location":"#welcome-to-gitodo-docs","text":"To see what is gitodo and what can it do, check here . You can also read about the motivation behind it's development in my blog post: Committing upfront .","title":"Welcome to gitodo docs"},{"location":"#installation","text":"Currently it's only possible to install the application via source.","title":"Installation"},{"location":"#prerequisites","text":"Go 1.23.4 or newer GCC MacOS: XCode, or type xcode-select --install in Terminal if you don't want the full app Linux: install build-essential package or equivalent Windows: install MSYS2 package in your PATH, or if you're using Scoop: scoop install gcc After the prerequisites are installed, execute the following command: go install github.com/drazengolic/gitodo@latest The application is tested on macOS and Ubuntu Linux. It works on Windows as well, but it's kind of sluggish, and you must use the Windows Terminal.","title":"Prerequisites:"},{"location":"gitodo/","text":"gitodo The stupid to-do list application for git projects Synopsis gitodo is a to-do list companion for git projects that ties to-do items to git repositories and branches without storing any files in the actual repositories. A minimalist tool that helps the busy developers to: keep track of what they've done and what they need to do per branch add ideas in the queue for later make stashing and popping of changes easier craft commit messages based on the work done prepare changelists track time view reports All configuration is read from git and the environment, no yaml files needed. Running the application without arguments will either: open up the editor to add items if none are found open a TUI screen where to-do items can be managed The invoked editor will be the same one that git invokes. To-do items do not have a priority. The top-most item should be always the one with the top priority, and commands like \"what\" and \"done\" read items from top to bottom. Use the TUI screen to change the order of the items. When stashing changes for an item, the \"--include-untracked\" flag will be passed to git, so if you don't want to have some untracked files to be stashed, make sure to add them to .gitignore file or move them somewhere else. By default, gitodo will store the database file into the current user's home directory. To override the path to the database file, set GITODO_DB environment variable to a desired path to the file. gitodo [flags] Options -h, --help help for gitodo SEE ALSO gitodo add - Add to-do items for the current branch gitodo changelist - Display to-do items as a changelist gitodo commit - Run a git commit with a prepared message gitodo done - Set the first available to-do item to done gitodo name - Display or set the name for your to-do branch. gitodo pitch - Checkout branch and add items at one go gitodo queue - Add to-do items to the repository queue gitodo report - View activity report gitodo start - Start a timer for the active branch gitodo stop - Stop the timer from anywhere gitodo util - Utility commands gitodo what - Display what's next to do Auto generated by spf13/cobra on 22-Mar-2025","title":"Gitodo"},{"location":"gitodo/#gitodo","text":"The stupid to-do list application for git projects","title":"gitodo"},{"location":"gitodo/#synopsis","text":"gitodo is a to-do list companion for git projects that ties to-do items to git repositories and branches without storing any files in the actual repositories. A minimalist tool that helps the busy developers to: keep track of what they've done and what they need to do per branch add ideas in the queue for later make stashing and popping of changes easier craft commit messages based on the work done prepare changelists track time view reports All configuration is read from git and the environment, no yaml files needed. Running the application without arguments will either: open up the editor to add items if none are found open a TUI screen where to-do items can be managed The invoked editor will be the same one that git invokes. To-do items do not have a priority. The top-most item should be always the one with the top priority, and commands like \"what\" and \"done\" read items from top to bottom. Use the TUI screen to change the order of the items. When stashing changes for an item, the \"--include-untracked\" flag will be passed to git, so if you don't want to have some untracked files to be stashed, make sure to add them to .gitignore file or move them somewhere else. By default, gitodo will store the database file into the current user's home directory. To override the path to the database file, set GITODO_DB environment variable to a desired path to the file. gitodo [flags]","title":"Synopsis"},{"location":"gitodo/#options","text":"-h, --help help for gitodo","title":"Options"},{"location":"gitodo/#see-also","text":"gitodo add - Add to-do items for the current branch gitodo changelist - Display to-do items as a changelist gitodo commit - Run a git commit with a prepared message gitodo done - Set the first available to-do item to done gitodo name - Display or set the name for your to-do branch. gitodo pitch - Checkout branch and add items at one go gitodo queue - Add to-do items to the repository queue gitodo report - View activity report gitodo start - Start a timer for the active branch gitodo stop - Stop the timer from anywhere gitodo util - Utility commands gitodo what - Display what's next to do","title":"SEE ALSO"},{"location":"gitodo/#auto-generated-by-spf13cobra-on-22-mar-2025","text":"","title":"Auto generated by spf13/cobra on 22-Mar-2025"},{"location":"gitodo_add/","text":"gitodo add Add to-do items for the current branch Synopsis Add to-do items for the current branch. Invoking without arguments will open up the editor for multiple items to be added. If there are arguments, all of them will be joined into a single to-do item. If the flag -t is provided, the new item will be placed at the top of the list. gitodo add [flags] Options -h, --help help for add -t, --top put the item at the top of the list SEE ALSO gitodo - The stupid to-do list application for git projects Auto generated by spf13/cobra on 22-Mar-2025","title":"Gitodo add"},{"location":"gitodo_add/#gitodo-add","text":"Add to-do items for the current branch","title":"gitodo add"},{"location":"gitodo_add/#synopsis","text":"Add to-do items for the current branch. Invoking without arguments will open up the editor for multiple items to be added. If there are arguments, all of them will be joined into a single to-do item. If the flag -t is provided, the new item will be placed at the top of the list. gitodo add [flags]","title":"Synopsis"},{"location":"gitodo_add/#options","text":"-h, --help help for add -t, --top put the item at the top of the list","title":"Options"},{"location":"gitodo_add/#see-also","text":"gitodo - The stupid to-do list application for git projects","title":"SEE ALSO"},{"location":"gitodo_add/#auto-generated-by-spf13cobra-on-22-mar-2025","text":"","title":"Auto generated by spf13/cobra on 22-Mar-2025"},{"location":"gitodo_changelist/","text":"gitodo changelist Display to-do items as a changelist Synopsis Display to-do items as a changelist usable in markdown documents. By default, it displays only the completed items. If --all flag is set, all items will be displayed in the form of a GitHub task list. If using a pager is desirable, set the --pager flag. gitodo changelist [flags] Options -a, --all show all -h, --help help for changelist -p, --pager use PAGER for output SEE ALSO gitodo - The stupid to-do list application for git projects Auto generated by spf13/cobra on 22-Mar-2025","title":"Gitodo changelist"},{"location":"gitodo_changelist/#gitodo-changelist","text":"Display to-do items as a changelist","title":"gitodo changelist"},{"location":"gitodo_changelist/#synopsis","text":"Display to-do items as a changelist usable in markdown documents. By default, it displays only the completed items. If --all flag is set, all items will be displayed in the form of a GitHub task list. If using a pager is desirable, set the --pager flag. gitodo changelist [flags]","title":"Synopsis"},{"location":"gitodo_changelist/#options","text":"-a, --all show all -h, --help help for changelist -p, --pager use PAGER for output","title":"Options"},{"location":"gitodo_changelist/#see-also","text":"gitodo - The stupid to-do list application for git projects","title":"SEE ALSO"},{"location":"gitodo_changelist/#auto-generated-by-spf13cobra-on-22-mar-2025","text":"","title":"Auto generated by spf13/cobra on 22-Mar-2025"},{"location":"gitodo_commit/","text":"gitodo commit Run a git commit with a prepared message Synopsis Run \"git commit\" with a prepared message based on the completed to-do items that will also be marked as committed if the commit was successful. Items that are previously marked as committed will not be included in the message unless \"--amend\" flag is provided. By default, the command will execute \"git commit -eF msgfile\", and any additional arguments or flags passed to this command will be appended to the base command. Special flag handling: if \"--amend\" flag is passed to commit, the msgfile will contain all of the completed to-do items that either aren't flagged as committed, or they were flagged as committed in the previously executed commit. if \"--no-edit\" is passed together with \"--amend\", no message will be generated and \"-eF\" will be left out gitodo commit [git flags] SEE ALSO gitodo - The stupid to-do list application for git projects Auto generated by spf13/cobra on 22-Mar-2025","title":"Gitodo commit"},{"location":"gitodo_commit/#gitodo-commit","text":"Run a git commit with a prepared message","title":"gitodo commit"},{"location":"gitodo_commit/#synopsis","text":"Run \"git commit\" with a prepared message based on the completed to-do items that will also be marked as committed if the commit was successful. Items that are previously marked as committed will not be included in the message unless \"--amend\" flag is provided. By default, the command will execute \"git commit -eF msgfile\", and any additional arguments or flags passed to this command will be appended to the base command. Special flag handling: if \"--amend\" flag is passed to commit, the msgfile will contain all of the completed to-do items that either aren't flagged as committed, or they were flagged as committed in the previously executed commit. if \"--no-edit\" is passed together with \"--amend\", no message will be generated and \"-eF\" will be left out gitodo commit [git flags]","title":"Synopsis"},{"location":"gitodo_commit/#see-also","text":"gitodo - The stupid to-do list application for git projects","title":"SEE ALSO"},{"location":"gitodo_commit/#auto-generated-by-spf13cobra-on-22-mar-2025","text":"","title":"Auto generated by spf13/cobra on 22-Mar-2025"},{"location":"gitodo_done/","text":"gitodo done Set the first available to-do item to done Synopsis Set the first available to-do item to done and output the next to-do item if found. If there are no items to be done, the \"All done!\" message is shown. If there is a timer running, it will display the session time at the moment of the command execution. gitodo done [flags] Options -h, --help help for done SEE ALSO gitodo - The stupid to-do list application for git projects Auto generated by spf13/cobra on 22-Mar-2025","title":"Gitodo done"},{"location":"gitodo_done/#gitodo-done","text":"Set the first available to-do item to done","title":"gitodo done"},{"location":"gitodo_done/#synopsis","text":"Set the first available to-do item to done and output the next to-do item if found. If there are no items to be done, the \"All done!\" message is shown. If there is a timer running, it will display the session time at the moment of the command execution. gitodo done [flags]","title":"Synopsis"},{"location":"gitodo_done/#options","text":"-h, --help help for done","title":"Options"},{"location":"gitodo_done/#see-also","text":"gitodo - The stupid to-do list application for git projects","title":"SEE ALSO"},{"location":"gitodo_done/#auto-generated-by-spf13cobra-on-22-mar-2025","text":"","title":"Auto generated by spf13/cobra on 22-Mar-2025"},{"location":"gitodo_name/","text":"gitodo name Display or set the name for your to-do branch. Synopsis Display or set the name for your to-do branch. The name defaults to the active branch. If a custom name is set (i.e. the title of a board ticket), it will be displayed across the application along with the branch name. When no argument is given, the command will output the current name. If there are arguments provided, the first one will be used to set the project name (no text join will happen, so make sure to use quotes). gitodo name [name] [flags] Options -h, --help help for name SEE ALSO gitodo - The stupid to-do list application for git projects Auto generated by spf13/cobra on 22-Mar-2025","title":"Gitodo name"},{"location":"gitodo_name/#gitodo-name","text":"Display or set the name for your to-do branch.","title":"gitodo name"},{"location":"gitodo_name/#synopsis","text":"Display or set the name for your to-do branch. The name defaults to the active branch. If a custom name is set (i.e. the title of a board ticket), it will be displayed across the application along with the branch name. When no argument is given, the command will output the current name. If there are arguments provided, the first one will be used to set the project name (no text join will happen, so make sure to use quotes). gitodo name [name] [flags]","title":"Synopsis"},{"location":"gitodo_name/#options","text":"-h, --help help for name","title":"Options"},{"location":"gitodo_name/#see-also","text":"gitodo - The stupid to-do list application for git projects","title":"SEE ALSO"},{"location":"gitodo_name/#auto-generated-by-spf13cobra-on-22-mar-2025","text":"","title":"Auto generated by spf13/cobra on 22-Mar-2025"},{"location":"gitodo_pitch/","text":"gitodo pitch Checkout branch and add items at one go Synopsis Quickly checkout to a branch (or create a new one if it doesn't exist) and add to-do items via arguments, or with an editor if no item arguments are provided. If --base flag is not provided, the current branch will be used as a starting point for the new branch. If --stash is provided, any changes will be stashed before checking out. When there is an active to-do item, the stash will reference the item. Project name can be also set by setting the --name flag. gitodo pitch branch_name [items...] [flags] Options -b, --base string Starting point (base) for the new branch -h, --help help for pitch -n, --name string Project name -s, --stash Stash changes before checkout SEE ALSO gitodo - The stupid to-do list application for git projects Auto generated by spf13/cobra on 22-Mar-2025","title":"Gitodo pitch"},{"location":"gitodo_pitch/#gitodo-pitch","text":"Checkout branch and add items at one go","title":"gitodo pitch"},{"location":"gitodo_pitch/#synopsis","text":"Quickly checkout to a branch (or create a new one if it doesn't exist) and add to-do items via arguments, or with an editor if no item arguments are provided. If --base flag is not provided, the current branch will be used as a starting point for the new branch. If --stash is provided, any changes will be stashed before checking out. When there is an active to-do item, the stash will reference the item. Project name can be also set by setting the --name flag. gitodo pitch branch_name [items...] [flags]","title":"Synopsis"},{"location":"gitodo_pitch/#options","text":"-b, --base string Starting point (base) for the new branch -h, --help help for pitch -n, --name string Project name -s, --stash Stash changes before checkout","title":"Options"},{"location":"gitodo_pitch/#see-also","text":"gitodo - The stupid to-do list application for git projects","title":"SEE ALSO"},{"location":"gitodo_pitch/#auto-generated-by-spf13cobra-on-22-mar-2025","text":"","title":"Auto generated by spf13/cobra on 22-Mar-2025"},{"location":"gitodo_queue/","text":"gitodo queue Add to-do items to the repository queue Synopsis Add to-do items to the repository queue. Queue is not an active to-do list, but a list of things you'd like to take on later, perhaps in another branch. Invoking without arguments will open up the editor for multiple items to be added. If there are arguments, all of them will be joined into a single to-do item. gitodo queue [flags] Options -h, --help help for queue SEE ALSO gitodo - The stupid to-do list application for git projects Auto generated by spf13/cobra on 22-Mar-2025","title":"Gitodo queue"},{"location":"gitodo_queue/#gitodo-queue","text":"Add to-do items to the repository queue","title":"gitodo queue"},{"location":"gitodo_queue/#synopsis","text":"Add to-do items to the repository queue. Queue is not an active to-do list, but a list of things you'd like to take on later, perhaps in another branch. Invoking without arguments will open up the editor for multiple items to be added. If there are arguments, all of them will be joined into a single to-do item. gitodo queue [flags]","title":"Synopsis"},{"location":"gitodo_queue/#options","text":"-h, --help help for queue","title":"Options"},{"location":"gitodo_queue/#see-also","text":"gitodo - The stupid to-do list application for git projects","title":"SEE ALSO"},{"location":"gitodo_queue/#auto-generated-by-spf13cobra-on-22-mar-2025","text":"","title":"Auto generated by spf13/cobra on 22-Mar-2025"},{"location":"gitodo_report/","text":"gitodo report View activity report Synopsis View the activity report for a given period of time that displays repositories, projects/branches, completed items, added but not completed items, and recorded time if any. The command can be executed anywhere, it is not required to be within a git repository. The command takes one argument that represents the number of days to look back for the data since the moment of requesting the report. Default value is 1. If flags --from and --to are provided, the \"days\" argument is ignored and the given interval is used instead. Both flags must be provided. To limit the report only to git repositories under a certain directory (child directories included), use the --dir flag. Relative paths are supported. To get the report in a JSON format that also contains more details than the default screen, set the --json flag. This flag, together with --from and --to can be used for automation scripts i.e. a cron job to feed the external systems (like time tracking or project management software) with the recorded data. When exporting to JSON, every timestamp will be converted to UTC. gitodo report [days] [flags] Options -d, --dir string Limit report to the repositories in this directory -f, --from string From what time (RFC3339) to read data -h, --help help for report -j, --json Print the report in JSON format -p, --pager use PAGER for output -t, --to string To what time (RFC3339) to read data SEE ALSO gitodo - The stupid to-do list application for git projects Auto generated by spf13/cobra on 22-Mar-2025","title":"Gitodo report"},{"location":"gitodo_report/#gitodo-report","text":"View activity report","title":"gitodo report"},{"location":"gitodo_report/#synopsis","text":"View the activity report for a given period of time that displays repositories, projects/branches, completed items, added but not completed items, and recorded time if any. The command can be executed anywhere, it is not required to be within a git repository. The command takes one argument that represents the number of days to look back for the data since the moment of requesting the report. Default value is 1. If flags --from and --to are provided, the \"days\" argument is ignored and the given interval is used instead. Both flags must be provided. To limit the report only to git repositories under a certain directory (child directories included), use the --dir flag. Relative paths are supported. To get the report in a JSON format that also contains more details than the default screen, set the --json flag. This flag, together with --from and --to can be used for automation scripts i.e. a cron job to feed the external systems (like time tracking or project management software) with the recorded data. When exporting to JSON, every timestamp will be converted to UTC. gitodo report [days] [flags]","title":"Synopsis"},{"location":"gitodo_report/#options","text":"-d, --dir string Limit report to the repositories in this directory -f, --from string From what time (RFC3339) to read data -h, --help help for report -j, --json Print the report in JSON format -p, --pager use PAGER for output -t, --to string To what time (RFC3339) to read data","title":"Options"},{"location":"gitodo_report/#see-also","text":"gitodo - The stupid to-do list application for git projects","title":"SEE ALSO"},{"location":"gitodo_report/#auto-generated-by-spf13cobra-on-22-mar-2025","text":"","title":"Auto generated by spf13/cobra on 22-Mar-2025"},{"location":"gitodo_start/","text":"gitodo start Start a timer for the active branch Synopsis Start a timer for the active branch. Where possible, an OS notification will be displayed. If the timer is already running, an error will be displayed. NOTE: only one timer can be active at any point in time! If a timer is active, and you try to make changes on a repository/branch other than the one that timer is running for, you'll have to stop it before you proceed with the changes. Only \"queue\" command is allowed. gitodo start [flags] Options -h, --help help for start SEE ALSO gitodo - The stupid to-do list application for git projects Auto generated by spf13/cobra on 22-Mar-2025","title":"Gitodo start"},{"location":"gitodo_start/#gitodo-start","text":"Start a timer for the active branch","title":"gitodo start"},{"location":"gitodo_start/#synopsis","text":"Start a timer for the active branch. Where possible, an OS notification will be displayed. If the timer is already running, an error will be displayed. NOTE: only one timer can be active at any point in time! If a timer is active, and you try to make changes on a repository/branch other than the one that timer is running for, you'll have to stop it before you proceed with the changes. Only \"queue\" command is allowed. gitodo start [flags]","title":"Synopsis"},{"location":"gitodo_start/#options","text":"-h, --help help for start","title":"Options"},{"location":"gitodo_start/#see-also","text":"gitodo - The stupid to-do list application for git projects","title":"SEE ALSO"},{"location":"gitodo_start/#auto-generated-by-spf13cobra-on-22-mar-2025","text":"","title":"Auto generated by spf13/cobra on 22-Mar-2025"},{"location":"gitodo_stop/","text":"gitodo stop Stop the timer from anywhere Synopsis Stop the running timer. The command can be executed from anywhere, it is not required to be in the same repository or at the same branch where the timer has started. And error is displayed if no timer is running. gitodo stop [flags] Options -h, --help help for stop SEE ALSO gitodo - The stupid to-do list application for git projects Auto generated by spf13/cobra on 22-Mar-2025","title":"Gitodo stop"},{"location":"gitodo_stop/#gitodo-stop","text":"Stop the timer from anywhere","title":"gitodo stop"},{"location":"gitodo_stop/#synopsis","text":"Stop the running timer. The command can be executed from anywhere, it is not required to be in the same repository or at the same branch where the timer has started. And error is displayed if no timer is running. gitodo stop [flags]","title":"Synopsis"},{"location":"gitodo_stop/#options","text":"-h, --help help for stop","title":"Options"},{"location":"gitodo_stop/#see-also","text":"gitodo - The stupid to-do list application for git projects","title":"SEE ALSO"},{"location":"gitodo_stop/#auto-generated-by-spf13cobra-on-22-mar-2025","text":"","title":"Auto generated by spf13/cobra on 22-Mar-2025"},{"location":"gitodo_util/","text":"gitodo util Utility commands Synopsis Utility commands for managing data. Options -h, --help help for util SEE ALSO gitodo - The stupid to-do list application for git projects gitodo util copy-items - Copy to-do items from one branch to another gitodo util delete - Delete branch data gitodo util list - List branches with data Auto generated by spf13/cobra on 22-Mar-2025","title":"Gitodo util"},{"location":"gitodo_util/#gitodo-util","text":"Utility commands","title":"gitodo util"},{"location":"gitodo_util/#synopsis","text":"Utility commands for managing data.","title":"Synopsis"},{"location":"gitodo_util/#options","text":"-h, --help help for util","title":"Options"},{"location":"gitodo_util/#see-also","text":"gitodo - The stupid to-do list application for git projects gitodo util copy-items - Copy to-do items from one branch to another gitodo util delete - Delete branch data gitodo util list - List branches with data","title":"SEE ALSO"},{"location":"gitodo_util/#auto-generated-by-spf13cobra-on-22-mar-2025","text":"","title":"Auto generated by spf13/cobra on 22-Mar-2025"},{"location":"gitodo_util_copy-items/","text":"gitodo util copy-items Copy to-do items from one branch to another Synopsis Copy to-do items from one branch to another gitodo util copy-items from to [flags] Options -h, --help help for copy-items SEE ALSO gitodo util - Utility commands Auto generated by spf13/cobra on 22-Mar-2025","title":"Gitodo util copy items"},{"location":"gitodo_util_copy-items/#gitodo-util-copy-items","text":"Copy to-do items from one branch to another","title":"gitodo util copy-items"},{"location":"gitodo_util_copy-items/#synopsis","text":"Copy to-do items from one branch to another gitodo util copy-items from to [flags]","title":"Synopsis"},{"location":"gitodo_util_copy-items/#options","text":"-h, --help help for copy-items","title":"Options"},{"location":"gitodo_util_copy-items/#see-also","text":"gitodo util - Utility commands","title":"SEE ALSO"},{"location":"gitodo_util_copy-items/#auto-generated-by-spf13cobra-on-22-mar-2025","text":"","title":"Auto generated by spf13/cobra on 22-Mar-2025"},{"location":"gitodo_util_delete/","text":"gitodo util delete Delete branch data Synopsis Delete to-do items and related data for all branch names provided as arguments. gitodo util delete [flags] Options -h, --help help for delete -y, --yes Delete without asking SEE ALSO gitodo util - Utility commands Auto generated by spf13/cobra on 22-Mar-2025","title":"Gitodo util delete"},{"location":"gitodo_util_delete/#gitodo-util-delete","text":"Delete branch data","title":"gitodo util delete"},{"location":"gitodo_util_delete/#synopsis","text":"Delete to-do items and related data for all branch names provided as arguments. gitodo util delete [flags]","title":"Synopsis"},{"location":"gitodo_util_delete/#options","text":"-h, --help help for delete -y, --yes Delete without asking","title":"Options"},{"location":"gitodo_util_delete/#see-also","text":"gitodo util - Utility commands","title":"SEE ALSO"},{"location":"gitodo_util_delete/#auto-generated-by-spf13cobra-on-22-mar-2025","text":"","title":"Auto generated by spf13/cobra on 22-Mar-2025"},{"location":"gitodo_util_list/","text":"gitodo util list List branches with data Synopsis List branches used with gitodo, together with a number of todo items. If a branch does not exist within the repository, it will be printed in red. gitodo util list [flags] Options -h, --help help for list SEE ALSO gitodo util - Utility commands Auto generated by spf13/cobra on 22-Mar-2025","title":"Gitodo util list"},{"location":"gitodo_util_list/#gitodo-util-list","text":"List branches with data","title":"gitodo util list"},{"location":"gitodo_util_list/#synopsis","text":"List branches used with gitodo, together with a number of todo items. If a branch does not exist within the repository, it will be printed in red. gitodo util list [flags]","title":"Synopsis"},{"location":"gitodo_util_list/#options","text":"-h, --help help for list","title":"Options"},{"location":"gitodo_util_list/#see-also","text":"gitodo util - Utility commands","title":"SEE ALSO"},{"location":"gitodo_util_list/#auto-generated-by-spf13cobra-on-22-mar-2025","text":"","title":"Auto generated by spf13/cobra on 22-Mar-2025"},{"location":"gitodo_what/","text":"gitodo what Display what's next to do Synopsis Display the first to-do item that isn't completed yet, starting from the top of the list. If there is no such item, \"All done!\" message will be shown. If there is a timer running, it will display the session time at the moment of the command execution. Also, if there are stashed changes assigned to any of the to-do items in the repository, the full list will be printed, organized by the branch name. gitodo what [flags] Options -h, --help help for what SEE ALSO gitodo - The stupid to-do list application for git projects Auto generated by spf13/cobra on 22-Mar-2025","title":"Gitodo what"},{"location":"gitodo_what/#gitodo-what","text":"Display what's next to do","title":"gitodo what"},{"location":"gitodo_what/#synopsis","text":"Display the first to-do item that isn't completed yet, starting from the top of the list. If there is no such item, \"All done!\" message will be shown. If there is a timer running, it will display the session time at the moment of the command execution. Also, if there are stashed changes assigned to any of the to-do items in the repository, the full list will be printed, organized by the branch name. gitodo what [flags]","title":"Synopsis"},{"location":"gitodo_what/#options","text":"-h, --help help for what","title":"Options"},{"location":"gitodo_what/#see-also","text":"gitodo - The stupid to-do list application for git projects","title":"SEE ALSO"},{"location":"gitodo_what/#auto-generated-by-spf13cobra-on-22-mar-2025","text":"","title":"Auto generated by spf13/cobra on 22-Mar-2025"}]}